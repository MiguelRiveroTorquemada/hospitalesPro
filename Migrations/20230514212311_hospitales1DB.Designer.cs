// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace hospitales.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230514212311_hospitales1DB")]
    partial class hospitales1DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clases.Pacientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("alta_baja")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Clases.Trabajadores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("baja")
                        .HasColumnType("bit");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inicioTrabajo")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("Especialidades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Trabajadoresid")
                        .HasColumnType("int");

                    b.Property<int>("afiliados")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inicioEspecialidad")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreEspecialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("rotativa")
                        .HasColumnType("bit");

                    b.Property<decimal>("salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("Trabajadoresid");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("Especialidades", b =>
                {
                    b.HasOne("Clases.Trabajadores", null)
                        .WithMany("Especialidades")
                        .HasForeignKey("Trabajadoresid");
                });

            modelBuilder.Entity("Clases.Trabajadores", b =>
                {
                    b.Navigation("Especialidades");
                });
#pragma warning restore 612, 618
        }
    }
}
